name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    # Checkout kodu źródłowego
    - name: Checkout Code
      uses: actions/checkout@v3

    # Instalacja Dockera
    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    # Budowanie obrazu Dockera
    - name: Build Docker Image
      run: |
        docker build -t hello-world-app .

    # Testowanie aplikacji
    - name: Test Application
      run: |
        docker run hello-world-app
push-to-dockerhub:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Log in to dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{secrets.DOCKER_PASSWORD }}
      - name: Push Docker Image
        env:
          DOCKER_USER: kubawrr
          DOCKER_PASSWORD: xxxxx
        run: |
          echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USER}" --password-stdin
          docker tag hello-world-app ${DOCKER_USER}/hello:latest
          docker push ${DOCKER_USER}/hello:latest

    deploy:
      needs: build
      runs-on: ubuntu-latest
      steps:
      - name: Deploy to Server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          echo "${SSH_PRIVATE_KEY}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking "
          docker pull ${DOCKER_USER}/hello:latest &&
          docker stop hello-container || true &&
          docker rm hello-container || true &&
          docker run -d --name hello-container ${DOCKER_USER}/hello:latest
        "
